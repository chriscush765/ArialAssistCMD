// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1923.NewArial_Assist.subsystems;

import org.usfirst.frc1923.NewArial_Assist.RobotMap;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Timer;
import org.firstrobotics1923.util.DefaultConfig;
import org.firstrobotics1923.util.MotorGroup;


/**
 *
 */
public class ShooterSystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Victor shooterFrontRight = RobotMap.shooterFrontRight;
    Victor shooterBackRight = RobotMap.shooterBackRight;
    Victor shooterFrontLeft = RobotMap.shooterFrontLeft;
    Victor shooterBackLeft = RobotMap.shooterBackLeft;
   // RobotDrive shooterSystem = RobotMap.shooterSystemDrive;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    private final MotorGroup rightWheels, leftWheels;
    private double speed = DefaultConfig.SHOOTER_SPEED;
    private Timer shootTimer = new Timer();
    
    /**
     * Creates a ShooterSystem with A set of front and back wheels
     * @param backWheels
     *              The motor group made of the Victors controlling the back wheels
     * @param frontWheels 
     *              The motor group made of the Victors controlling the front wheels
     */
    public ShooterSystem(MotorGroup leftWheels, MotorGroup rightWheels) {
       this.leftWheels = leftWheels;
       this.rightWheels = rightWheels;
    }
    
    /**
    * Starts Motors at set speed 
    */
    public void activate() {
        rightWheels.set(speed);
        leftWheels.set(-speed);
        
        RobotMap.sfxDashboard.ShooterWheel_Command = true;
        RobotMap.sfxDashboard.Victor_5 = speed;
        RobotMap.sfxDashboard.Victor_6 = speed;
        RobotMap.sfxDashboard.Victor_7 = -speed;
        RobotMap.sfxDashboard.Victor_8 = -speed;
                
        this.shootTimer.stop();
        this.shootTimer.reset();
        this.shootTimer.start();
    }
  
    /**
    * Stops the Motors on the shooter
    */
    public void stop() {
        rightWheels.set(0.0);
        rightWheels.disable();
        leftWheels.set(0.0);
        leftWheels.disable();
        
        RobotMap.sfxDashboard.ShooterWheel_Command = false;
        RobotMap.sfxDashboard.Victor_5 = 0.0;
        RobotMap.sfxDashboard.Victor_6 = 0.0;
        RobotMap.sfxDashboard.Victor_7 = 0.0;
        RobotMap.sfxDashboard.Victor_8 = 0.0;
        
        this.shootTimer.stop();
        this.shootTimer.reset();
        this.shootTimer.start(); //Keep This here
        this.shootTimer.stop();
    }
    
    public double getShootTime() {
        return shootTimer.get();
    }
    
    public void resetTimer() {
        this.shootTimer.stop();
        this.shootTimer.reset();
        this.shootTimer.start();
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}

