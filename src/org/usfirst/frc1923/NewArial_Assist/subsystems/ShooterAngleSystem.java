// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1923.NewArial_Assist.subsystems;

import org.usfirst.frc1923.NewArial_Assist.RobotMap;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Solenoid;


/**
 *
 */
public class ShooterAngleSystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Solenoid shooterAngleControllerOne = RobotMap.shooterAngleControllerOne;
    Solenoid shooterAngleControllerTwo = RobotMap.shooterAngleControllerTwo;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
private final Solenoid angleControllerOne, angleControllerTwo;
    
    /**
     * Creates the ShooterAngleSystem and sets the two Solenoids
     * @param angleControllerOne
     *                          One of two solenoids that controls system
     * @param angleControllerTwo
     *                          One of two solenoids that controls system
     */
    public ShooterAngleSystem(Solenoid angleControllerOne, Solenoid angleControllerTwo){
        this.angleControllerOne = angleControllerOne;
        this.angleControllerTwo = angleControllerTwo;
    }
   
    /**
     * Raises shooter
     */
    public void activate() {
        this.angleControllerOne.set(true);             //DA fuq? Controls switched
        this.angleControllerTwo.set(false);
        
        RobotMap.sfxDashboard.ShooterAngle_Command = true;
        RobotMap.sfxDashboard.ShooterAnglePiston_1 = true;
        RobotMap.sfxDashboard.ShooterAnglePiston_2 = false;
        
        
    }

    /**
     * Lowers the shooter
     */
    public void deactivate() {
        this.angleControllerOne.set(false);
        this.angleControllerTwo.set(true);   
        
        RobotMap.sfxDashboard.ShooterAngle_Command = false;
        RobotMap.sfxDashboard.ShooterAnglePiston_1 = false;
        RobotMap.sfxDashboard.ShooterAnglePiston_2 = true;
    } 
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}

